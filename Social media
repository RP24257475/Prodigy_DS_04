import tweepy
import pandas as pd
from textblob import TextBlob
import matplotlib.pyplot as plt
import seaborn as sns
api_key = 'YOUR_API_KEY'
api_key_secret = 'YOUR_API_KEY_SECRET'
access_token = 'YOUR_ACCESS_TOKEN'
access_token_secret = 'YOUR_ACCESS_TOKEN_SECRET'
auth = tweepy.OAuthHandler(api_key, api_key_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth, wait_on_rate_limit=True)
def collect_tweets(query, count=100):
    tweets = tweepy.Cursor(api.search_tweets, q=query, lang="en").items(count)
    tweets_data = [[tweet.created_at, tweet.text] for tweet in tweets]
    df = pd.DataFrame(tweets_data, columns=['Date', 'Tweet'])
    return df
def analyze_sentiment(tweet):
    analysis = TextBlob(tweet)
    if analysis.sentiment.polarity > 0:
        return 'Positive'
    elif analysis.sentiment.polarity == 0:
        return 'Neutral'
    else:
        return 'Negative'
query = "YourTopic OR #YourBrand"
tweets_df = collect_tweets(query, count=500)
tweets_df['Sentiment'] = tweets_df['Tweet'].apply(analyze_sentiment)
tweets_df['Date'] = pd.to_datetime(tweets_df['Date']).dt.date
sentiment_counts = tweets_df.groupby(['Date', 'Sentiment']).size().unstack(fill_value=0)
sns.set(style="whitegrid")
plt.figure(figsize=(12, 6))
sns.lineplot(data=sentiment_counts)
plt.title('Sentiment Analysis of Tweets Over Time')
plt.xlabel('Date')
plt.ylabel('Number of Tweets')
plt.legend(title='Sentiment')
plt.show()
plt.figure(figsize=(8, 6))
sns.countplot(x='Sentiment', data=tweets_df)
plt.title('Distribution of Sentiment')
plt.xlabel('Sentiment')
plt.ylabel('Number of Tweets')
plt.show()
